name: Release
on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.4
          registry-url: https://registry.npmjs.org/
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Generate Changelog
        id: changelog
        run: pnpm run changelog

      - name: Show computed version
        run: |
          echo "Computed version: ${{ steps.changelog.outputs.version }}"

      - name: Sync version to package.json files
        run: pnpm run version "${{ steps.changelog.outputs.version }}"

      - name: Commit and Push Changelog
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add CHANGELOG.md
          git diff --staged --quiet || git commit -m "chore(release): update changelog [skip ci]"
          git push

      - name: Create tag
        run: |
          git tag "${{ steps.changelog.outputs.tag }}" || echo "Tag exists"
          git push origin "${{ steps.changelog.outputs.tag }}" || echo "Tag already pushed"

      - name: Publish to npm
        working-directory: packages/feature-flag-plugin
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.version }}
          release_name: Release ${{ steps.changelog.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
